{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastupdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","url","fetchData","country","a","changeableUrl","axios","get","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bf2b37f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3KUdh\",\"card\":\"Cards_card__3q4-Q\",\"infected\":\"Cards_infected__1eEPu\",\"recovered\":\"Cards_recovered__3wubP\",\"deaths\":\"Cards_deaths__Z-nFl\"};","import React from 'react' \r\nimport {Card , CardContent , Typography , Grid} from '@material-ui/core' \r\nimport Countup from 'react-countup'\r\nimport styles from './Cards.module.css'\r\nimport cx from 'classnames'\r\nconst Cards = ({data : {confirmed,recovered,deaths,lastupdate} }) => { \r\n\r\n    if(!confirmed){\r\n            return \"loading\" ; \r\n    }\r\n    \r\n    return (\r\n        <div className = {styles.container}>\r\n            <Grid container spacing = {3} justify = \"center\">\r\n            \r\n            <Grid item component = {Card} xs = {12} md = {3} className = {cx(styles.card , styles.infected)}> \r\n            <CardContent>\r\n            \r\n            <Typography color = \"textSecondary\" gutterBottom>\r\n            Infected \r\n            </Typography> \r\n            \r\n            <Typography variant = 'h5'>\r\n                <Countup \r\n                    start = {0}  \r\n                    end = {confirmed.value} \r\n                    duration = {0.5} \r\n                    seperator = \",\"\r\n                ></Countup>\r\n            </Typography>\r\n            \r\n            <Typography variant = 'body2'>Number of active cases</Typography>\r\n            \r\n            </CardContent>\r\n            \r\n            </Grid>\r\n            <Grid item component = {Card} xs = {12} md = {3} className = {cx(styles.card , styles.recovered)}> \r\n            <CardContent>\r\n            \r\n            <Typography color = \"textSecondary\" gutterBottom>\r\n            recovered\r\n            </Typography> \r\n            \r\n            <Typography variant = 'h5'>\r\n                <Countup \r\n                    start = {0}  \r\n                    end = {recovered.value} \r\n                    duration = {0.5} \r\n                    seperator = \",\"\r\n                ></Countup>\r\n            </Typography>\r\n            \r\n            \r\n            <Typography variant = 'body2'>Number of recoered cases</Typography>\r\n            </CardContent>\r\n            </Grid>\r\n            \r\n            \r\n            <Grid item component = {Card} xs = {12} md = {3} className = {cx(styles.card , styles.deaths)}> \r\n            <CardContent>\r\n            <Typography color = \"textSecondary\" gutterBottom>\r\n            deaths\r\n            </Typography> \r\n            <Typography variant = 'h5'>\r\n            <Countup \r\n                    start = {0}  \r\n                    end = {deaths.value} \r\n                    duration = {0.5} \r\n                    seperator = \",\"\r\n                ></Countup> \r\n            </Typography>\r\n            \r\n            <Typography variant = 'body2'>Number of deaths cases</Typography>\r\n            </CardContent>\r\n            </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Cards ; ","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        \r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n//export default App ; ","import React from 'react' ; \r\nimport ReactDOM from 'react-dom' ; \r\nimport App from './App' ; \r\n\r\nReactDOM.render(<App /> , document.getElementById('root')) ; \r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2stZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2M7EG\",\"image\":\"App_image__2FiW2\"};"],"sourceRoot":""}